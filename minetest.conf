#############################################
# Pappardelle Minetest server configuration #
#############################################

#
# Server / Singleplayer
#

#    Name of the server, to be displayed when players join and in the serverlist.
#    type: string
server_name = Pappardelle

#    Description of server, to be displayed when players join and in the serverlist.
#    type: string
server_description = A peaceful server hosted by the Pappardelle community.

#    Domain name of server, to be displayed in the serverlist.
#    type: string
server_address = mersh.com

#    Homepage of server, to be displayed in the serverlist.
#    type: string
server_url = https://github.com/pappardelle-org/minetest

#    Automatically report to the serverlist.
#    type: bool
server_announce = true

#    Announce to this serverlist.
#    type: string
# serverlist_url = servers.minetest.net

#    Remove color codes from incoming chat messages
#    Use this to stop players from being able to use color in their messages
#    type: bool
# strip_color_codes = false

## Network

#    Network port to listen (UDP).
#    This value will be overridden when starting from the main menu.
#    type: int
# port = 30000

#    The network interface that the server listens on.
#    type: string
# bind_address =

#    Enable to disallow old clients from connecting.
#    Older clients are compatible in the sense that they will not crash when connecting
#    to new servers, but they may not support all new features that you are expecting.
#    type: bool
# strict_protocol_version_checking = false

#    Specifies URL from which client fetches media instead of using UDP.
#    $filename should be accessible from $remote_media$filename via cURL
#    (obviously, remote_media should end with a slash).
#    Files that are not present will be fetched the usual way.
#    type: string
# remote_media =

#    Enable/disable running an IPv6 server.
#    Ignored if bind_address is set.
#    Needs enable_ipv6 to be enabled.
#    type: bool
# ipv6_server = false

### Advanced

#    Maximum number of blocks that are simultaneously sent per client.
#    The maximum total count is calculated dynamically:
#    max_total = ceil((#clients + max_users) * per_client / 4)
#    type: int
max_simultaneous_block_sends_per_client = 5

#    To reduce lag, block transfers are slowed down when a player is building something.
#    This determines how long they are slowed down after placing or removing a node.
#    type: float
# full_block_send_enable_min_time_from_building = 2.0

#    Maximum number of packets sent per send step, if you have a slow connection
#    try reducing it, but don't reduce it to a number below double of targeted
#    client number.
#    type: int
# max_packets_per_iteration = 1024

#    Compression level to use when sending mapblocks to the client.
#    -1 - use default compression level
#    0 - least compression, fastest
#    9 - best compression, slowest
#    type: int min: -1 max: 9
# map_compression_level_net = -1

## Game

#    Default game when creating a new world.
#    This will be overridden when creating a world from the main menu.
#    type: string
default_game = minetest

#    Message of the day displayed to players connecting.
#    type: string
motd = Welcome to Pappardelle! Have fun!

#    Maximum number of players that can be connected simultaneously.
#    type: int
max_users = 32

#    World directory (everything in the world is stored here).
#    Not needed if starting from the main menu.
#    type: path
map-dir = world

#    Time in seconds for item entity (dropped items) to live.
#    Setting it to -1 disables the feature.
#    type: int
# item_entity_ttl = 900

#    Specifies the default stack size of nodes, items and tools.
#    Note that mods or games may explicitly set a stack for certain (or all) items.
#    type: int
# default_stack_max = 99

#    Enable players getting damage and dying.
#    type: bool
enable_damage = true

#    Enable creative mode for all players
#    type: bool
# creative_mode = false

#    A chosen map seed for a new map, leave empty for random.
#    Will be overridden when creating a new world in the main menu.
#    type: string
# fixed_map_seed =

#    New users need to input this password.
#    type: string
# default_password =

#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
#    type: string
# default_privs = interact, shout

#    Privileges that players with basic_privs can grant
#    type: string
# basic_privs = interact, shout

#    Whether players are shown to clients without any range limit.
#    Deprecated, use the setting player_transfer_distance instead.
#    type: bool
# unlimited_player_transfer_distance = true

#    Defines the maximal player transfer distance in blocks (0 = unlimited).
#    type: int
# player_transfer_distance = 0

#    Whether to allow players to damage and kill each other.
#    type: bool
# enable_pvp = true

#    Enable mod channels support.
#    type: bool
# enable_mod_channels = false

#    If this is set, players will always (re)spawn at the given position.
#    type: string
# static_spawnpoint =

#    If enabled, new players cannot join with an empty password.
#    type: bool
disallow_empty_password = true

#    If enabled, disable cheat prevention in multiplayer.
#    type: bool
# disable_anticheat = false

#    If enabled, actions are recorded for rollback.
#    This option is only read when server starts.
#    type: bool
enable_rollback_recording = true

#    Format of player chat messages. The following strings are valid placeholders:
#    @name, @message, @timestamp (optional)
#    type: string
# chat_message_format = <@name> @message

#    If the execution of a chat command takes longer than this specified time in
#    seconds, add the time information to the chat command message
#    type: float
# chatcommand_msg_time_threshold = 0.1

#    A message to be displayed to all clients when the server shuts down.
#    type: string
# kick_msg_shutdown = Server shutting down.

#    A message to be displayed to all clients when the server crashes.
#    type: string
# kick_msg_crash = This server has experienced an internal error. You will now be disconnected.

#    Whether to ask clients to reconnect after a (Lua) crash.
#    Set this to true if your server is set up to restart automatically.
#    type: bool
# ask_reconnect_on_crash = false

#    From how far clients know about objects, stated in mapblocks (16 nodes).
#
#    Setting this larger than active_block_range will also cause the server
#    to maintain active objects up to this distance in the direction the
#    player is looking. (This can avoid mobs suddenly disappearing from view)
#    type: int
# active_object_send_range_blocks = 8

#    The radius of the volume of blocks around every player that is subject to the
#    active block stuff, stated in mapblocks (16 nodes).
#    In active blocks objects are loaded and ABMs run.
#    This is also the minimum range in which active objects (mobs) are maintained.
#    This should be configured together with active_object_send_range_blocks.
#    type: int
active_block_range = 2

#    From how far blocks are sent to clients, stated in mapblocks (16 nodes).
#    type: int
max_block_send_distance = 8

#    Maximum number of forceloaded mapblocks.
#    type: int
# max_forceloaded_blocks = 16

#    Interval of sending time of day to clients.
#    type: int
# time_send_interval = 5

#    Controls length of day/night cycle.
#    Examples:
#    72 = 20min, 360 = 4min, 1 = 24hour, 0 = day/night/whatever stays unchanged.
#    type: int
# time_speed = 72

#    Time of day when a new world is started, in millihours (0-23999).
#    type: int min: 0 max: 23999
# world_start_time = 6125

#    Interval of saving important changes in the world, stated in seconds.
#    type: float
server_map_save_interval = 10.3

#    Set the maximum character length of a chat message sent by clients.
#    type: int
# chat_message_max_size = 500

#    Amount of messages a player may send per 10 seconds.
#    type: float
# chat_message_limit_per_10sec = 10.0

#    Kick players who sent more than X messages per 10 seconds.
#    type: int
# chat_message_limit_trigger_kick = 50

## Security

#    Prevent mods from doing insecure things like running shell commands.
#    type: bool
# secure.enable_security = true

#    Comma-separated list of trusted mods that are allowed to access insecure
#    functions even when mod security is on (via request_insecure_environment()).
#    type: string
secure.trusted_mods = skinsdb

#    Comma-separated list of mods that are allowed to access HTTP APIs, which
#    allow them to upload and download data to/from the internet.
#    type: string
# secure.http_mods =

## Advanced

### Profiling

#    Load the game profiler to collect game profiling data.
#    Provides a /profiler command to access the compiled profile.
#    Useful for mod developers and server operators.
#    type: bool
profiler.load = true

#    The default format in which profiles are being saved,
#    when calling `/profiler save [format]` without format.
#    type: enum values: txt, csv, lua, json, json_pretty
# profiler.default_report_format = txt

#    The file path relative to your worldpath in which profiles will be saved to.
#    type: string
# profiler.report_path = ""

#
# Client and Server
#

#    Name of the player.
#    When running a server, clients connecting with this name are admins.
#    When starting from the main menu, this is overridden.
#    type: string
name = garretthoward

#    Set the language. Leave empty to use the system language.
#    A restart is required after changing this.
#    type: enum values: , be, bg, ca, cs, da, de, el, en, eo, es, et, eu, fi, fr, gd, gl, hu, id, it, ja, jbo, kk, ko, lt, lv, ms, nb, nl, nn, pl, pt, pt_BR, ro, ru, sk, sl, sr_Cyrl, sr_Latn, sv, sw, tr, uk, vi, zh_CN, zh_TW
# language =

#    Level of logging to be written to debug.txt:
#    -    <nothing> (no logging)
#    -    none (messages with no level)
#    -    error
#    -    warning
#    -    action
#    -    info
#    -    verbose
#    -    trace
#    type: enum values: , none, error, warning, action, info, verbose, trace
# debug_log_level = action

#    If the file size of debug.txt exceeds the number of megabytes specified in
#    this setting when it is opened, the file is moved to debug.txt.1,
#    deleting an older debug.txt.1 if it exists.
#    debug.txt is only moved if this setting is positive.
#    type: int
# debug_log_size_max = 50

#    Minimal level of logging to be written to chat.
#    type: enum values: , none, error, warning, action, info, verbose, trace
# chat_log_level = error

#    Enable IPv6 support (for both client and server).
#    Required for IPv6 connections to work at all.
#    type: bool
# enable_ipv6 = true

#
# Online Content Repository
#

#    The URL for the content repository
#    type: string
# contentdb_url = https://content.minetest.net

#    Comma-separated list of flags to hide in the content repository.
#    "nonfree" can be used to hide packages which do not qualify as 'free software',
#    as defined by the Free Software Foundation.
#    You can also specify content ratings.
#    These flags are independent from Minetest versions,
#    so see a full list at https://content.minetest.net/help/content_flags/
#    type: string
# contentdb_flag_blacklist = nonfree, desktop_default

#    Maximum number of concurrent downloads. Downloads exceeding this limit will be queued.
#    This should be lower than curl_parallel_limit.
#    type: int
# contentdb_max_concurrent_downloads = 3

